package proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KDAData_EnumAssetType int32

const (
	KDAData_Fungible    KDAData_EnumAssetType = 0
	KDAData_NonFungible KDAData_EnumAssetType = 1
)

// Enum value maps for KDAData_EnumAssetType.
var (
	KDAData_EnumAssetType_name = map[int32]string{
		0: "Fungible",
		1: "NonFungible",
	}
	KDAData_EnumAssetType_value = map[string]int32{
		"Fungible":    0,
		"NonFungible": 1,
	}
)

func (x KDAData_EnumAssetType) Enum() *KDAData_EnumAssetType {
	p := new(KDAData_EnumAssetType)
	*p = x
	return p
}

func (x KDAData_EnumAssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KDAData_EnumAssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_kda_proto_enumTypes[0].Descriptor()
}

func (KDAData_EnumAssetType) Type() protoreflect.EnumType {
	return &file_kda_proto_enumTypes[0]
}

func (x KDAData_EnumAssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KDAData_EnumAssetType.Descriptor instead.
func (KDAData_EnumAssetType) EnumDescriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{0, 0}
}

// KDAData holds the data for a Klever digital asset
type KDAData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetType         KDAData_EnumAssetType `protobuf:"varint,1,opt,name=AssetType,json=assetType,proto3,enum=proto.KDAData_EnumAssetType" json:"AssetType,omitempty"`
	ID                []byte                `protobuf:"bytes,2,opt,name=ID,json=id,omitempty,proto3" json:"ID,omitempty"`
	Name              []byte                `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Ticker            []byte                `protobuf:"bytes,4,opt,name=Ticker,json=ticker,proto3" json:"Ticker,omitempty"`
	OwnerAddress      []byte                `protobuf:"bytes,5,opt,name=OwnerAddress,json=ownerAddress,proto3" json:"OwnerAddress,omitempty"`
	Logo              string                `protobuf:"bytes,6,opt,name=Logo,json=logo,proto3" json:"Logo,omitempty"`
	URIs              map[string]string     `protobuf:"bytes,7,rep,name=URIs,json=uris,proto3" json:"URIs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Precision         uint32                `protobuf:"varint,8,opt,name=Precision,json=precision,proto3" json:"Precision,omitempty"`
	InitialSupply     int64                 `protobuf:"varint,9,opt,name=InitialSupply,json=initialSupply,proto3" json:"InitialSupply,omitempty"`
	CirculatingSupply int64                 `protobuf:"varint,10,opt,name=CirculatingSupply,json=circulatingSupply,proto3" json:"CirculatingSupply,omitempty"`
	MaxSupply         int64                 `protobuf:"varint,11,opt,name=MaxSupply,json=maxSupply,proto3" json:"MaxSupply,omitempty"`
	MintedValue       int64                 `protobuf:"varint,12,opt,name=MintedValue,json=mintedValue,proto3" json:"MintedValue,omitempty"`
	BurnedValue       int64                 `protobuf:"varint,13,opt,name=BurnedValue,json=burnedValue,proto3" json:"BurnedValue,omitempty"`
	IssueDate         int64                 `protobuf:"varint,14,opt,name=IssueDate,json=issueDate,proto3" json:"IssueDate,omitempty"`
	Royalties         *RoyaltiesData        `protobuf:"bytes,15,opt,name=Royalties,json=royalties,proto3" json:"Royalties,omitempty"`
	Properties        *PropertiesData       `protobuf:"bytes,16,opt,name=Properties,json=properties,proto3" json:"Properties,omitempty"`
	Attributes        *AttributesData       `protobuf:"bytes,17,opt,name=Attributes,json=attributes,proto3" json:"Attributes,omitempty"`
	Roles             []*RolesData          `protobuf:"bytes,18,rep,name=Roles,json=roles,proto3" json:"Roles,omitempty"`
}

func (x *KDAData) Reset() {
	*x = KDAData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KDAData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KDAData) ProtoMessage() {}

func (x *KDAData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KDAData.ProtoReflect.Descriptor instead.
func (*KDAData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{0}
}

func (x *KDAData) GetAssetType() KDAData_EnumAssetType {
	if x != nil {
		return x.AssetType
	}
	return KDAData_Fungible
}

func (x *KDAData) GetID() []byte {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *KDAData) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *KDAData) GetTicker() []byte {
	if x != nil {
		return x.Ticker
	}
	return nil
}

func (x *KDAData) GetOwnerAddress() []byte {
	if x != nil {
		return x.OwnerAddress
	}
	return nil
}

func (x *KDAData) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *KDAData) GetURIs() map[string]string {
	if x != nil {
		return x.URIs
	}
	return nil
}

func (x *KDAData) GetPrecision() uint32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *KDAData) GetInitialSupply() int64 {
	if x != nil {
		return x.InitialSupply
	}
	return 0
}

func (x *KDAData) GetCirculatingSupply() int64 {
	if x != nil {
		return x.CirculatingSupply
	}
	return 0
}

func (x *KDAData) GetMaxSupply() int64 {
	if x != nil {
		return x.MaxSupply
	}
	return 0
}

func (x *KDAData) GetMintedValue() int64 {
	if x != nil {
		return x.MintedValue
	}
	return 0
}

func (x *KDAData) GetBurnedValue() int64 {
	if x != nil {
		return x.BurnedValue
	}
	return 0
}

func (x *KDAData) GetIssueDate() int64 {
	if x != nil {
		return x.IssueDate
	}
	return 0
}

func (x *KDAData) GetRoyalties() *RoyaltiesData {
	if x != nil {
		return x.Royalties
	}
	return nil
}

func (x *KDAData) GetProperties() *PropertiesData {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *KDAData) GetAttributes() *AttributesData {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *KDAData) GetRoles() []*RolesData {
	if x != nil {
		return x.Roles
	}
	return nil
}

// PropertiesData hold the properties structure for the KDA asset
type PropertiesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanFreeze      bool `protobuf:"varint,1,opt,name=CanFreeze,json=canFreeze,proto3" json:"CanFreeze,omitempty"`
	CanWipe        bool `protobuf:"varint,2,opt,name=CanWipe,json=canWipe,proto3" json:"CanWipe,omitempty"`
	CanPause       bool `protobuf:"varint,3,opt,name=CanPause,json=canPause,proto3" json:"CanPause,omitempty"`
	CanMint        bool `protobuf:"varint,4,opt,name=CanMint,json=canMint,proto3" json:"CanMint,omitempty"`
	CanBurn        bool `protobuf:"varint,5,opt,name=CanBurn,json=canBurn,proto3" json:"CanBurn,omitempty"`
	CanChangeOwner bool `protobuf:"varint,6,opt,name=CanChangeOwner,json=canChangeOwner,proto3" json:"CanChangeOwner,omitempty"`
	CanAddRoles    bool `protobuf:"varint,7,opt,name=CanAddRoles,json=canAddRoles,proto3" json:"CanAddRoles,omitempty"`
}

func (x *PropertiesData) Reset() {
	*x = PropertiesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertiesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertiesData) ProtoMessage() {}

func (x *PropertiesData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertiesData.ProtoReflect.Descriptor instead.
func (*PropertiesData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{1}
}

func (x *PropertiesData) GetCanFreeze() bool {
	if x != nil {
		return x.CanFreeze
	}
	return false
}

func (x *PropertiesData) GetCanWipe() bool {
	if x != nil {
		return x.CanWipe
	}
	return false
}

func (x *PropertiesData) GetCanPause() bool {
	if x != nil {
		return x.CanPause
	}
	return false
}

func (x *PropertiesData) GetCanMint() bool {
	if x != nil {
		return x.CanMint
	}
	return false
}

func (x *PropertiesData) GetCanBurn() bool {
	if x != nil {
		return x.CanBurn
	}
	return false
}

func (x *PropertiesData) GetCanChangeOwner() bool {
	if x != nil {
		return x.CanChangeOwner
	}
	return false
}

func (x *PropertiesData) GetCanAddRoles() bool {
	if x != nil {
		return x.CanAddRoles
	}
	return false
}

// AttributesData hold the attributes structure for the KDA asset
type AttributesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPaused                   bool `protobuf:"varint,1,opt,name=IsPaused,json=isPaused,proto3" json:"IsPaused,omitempty"`
	IsNFTMintStopped           bool `protobuf:"varint,2,opt,name=IsNFTMintStopped,json=isNFTMintStopped,proto3" json:"IsNFTMintStopped,omitempty"`
	IsRoyaltiesChangeStopped   bool `protobuf:"varint,3,opt,name=IsRoyaltiesChangeStopped,json=isRoyaltiesChangeStopped,proto3" json:"IsRoyaltiesChangeStopped,omitempty"`
	IsNFTMetadataChangeStopped bool `protobuf:"varint,4,opt,name=IsNFTMetadataChangeStopped,json=isNFTMetadataChangeStopped,proto3" json:"IsNFTMetadataChangeStopped,omitempty"`
}

func (x *AttributesData) Reset() {
	*x = AttributesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesData) ProtoMessage() {}

func (x *AttributesData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesData.ProtoReflect.Descriptor instead.
func (*AttributesData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{2}
}

func (x *AttributesData) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

func (x *AttributesData) GetIsNFTMintStopped() bool {
	if x != nil {
		return x.IsNFTMintStopped
	}
	return false
}

func (x *AttributesData) GetIsRoyaltiesChangeStopped() bool {
	if x != nil {
		return x.IsRoyaltiesChangeStopped
	}
	return false
}

func (x *AttributesData) GetIsNFTMetadataChangeStopped() bool {
	if x != nil {
		return x.IsNFTMetadataChangeStopped
	}
	return false
}

// RolesData holds the roles for a given asset and the given address
type RolesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address             []byte `protobuf:"bytes,1,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	HasRoleMint         bool   `protobuf:"varint,2,opt,name=HasRoleMint,json=hasRoleMint,proto3" json:"HasRoleMint,omitempty"`
	HasRoleSetITOPrices bool   `protobuf:"varint,3,opt,name=HasRoleSetITOPrices,json=hasRoleSetITOPrices,proto3" json:"HasRoleSetITOPrices,omitempty"`
	HasRoleDeposit      bool   `protobuf:"varint,4,opt,name=HasRoleDeposit,json=hasRoleDeposit,proto3" json:"HasRoleDeposit,omitempty"`
}

func (x *RolesData) Reset() {
	*x = RolesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesData) ProtoMessage() {}

func (x *RolesData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesData.ProtoReflect.Descriptor instead.
func (*RolesData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{3}
}

func (x *RolesData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RolesData) GetHasRoleMint() bool {
	if x != nil {
		return x.HasRoleMint
	}
	return false
}

func (x *RolesData) GetHasRoleSetITOPrices() bool {
	if x != nil {
		return x.HasRoleSetITOPrices
	}
	return false
}

func (x *RolesData) GetHasRoleDeposit() bool {
	if x != nil {
		return x.HasRoleDeposit
	}
	return false
}

// RoyaltiesData holds the royalties for a given asset
type RoyaltiesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            []byte                       `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	TransferPercentage []*RoyaltyData               `protobuf:"bytes,2,rep,name=TransferPercentage,json=transferPercentage,proto3" json:"TransferPercentage,omitempty"`
	TransferFixed      int64                        `protobuf:"varint,3,opt,name=TransferFixed,json=transferFixed,proto3" json:"TransferFixed,omitempty"`
	MarketPercentage   uint32                       `protobuf:"varint,4,opt,name=MarketPercentage,json=marketPercentage,proto3" json:"MarketPercentage,omitempty"`
	MarketFixed        int64                        `protobuf:"varint,5,opt,name=MarketFixed,json=marketFixed,proto3" json:"MarketFixed,omitempty"`
	SplitRoyalties     map[string]*RoyaltySplitData `protobuf:"bytes,6,rep,name=SplitRoyalties,json=splitRoyalties,proto3" json:"SplitRoyalties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ITOPercentage      uint32                       `protobuf:"varint,7,opt,name=ITOPercentage,json=itoPercentage,proto3" json:"ITOPercentage,omitempty"`
	ITOFixed           int64                        `protobuf:"varint,8,opt,name=ITOFixed,json=itoFixed,proto3" json:"ITOFixed,omitempty"`
}

func (x *RoyaltiesData) Reset() {
	*x = RoyaltiesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoyaltiesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoyaltiesData) ProtoMessage() {}

func (x *RoyaltiesData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoyaltiesData.ProtoReflect.Descriptor instead.
func (*RoyaltiesData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{4}
}

func (x *RoyaltiesData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *RoyaltiesData) GetTransferPercentage() []*RoyaltyData {
	if x != nil {
		return x.TransferPercentage
	}
	return nil
}

func (x *RoyaltiesData) GetTransferFixed() int64 {
	if x != nil {
		return x.TransferFixed
	}
	return 0
}

func (x *RoyaltiesData) GetMarketPercentage() uint32 {
	if x != nil {
		return x.MarketPercentage
	}
	return 0
}

func (x *RoyaltiesData) GetMarketFixed() int64 {
	if x != nil {
		return x.MarketFixed
	}
	return 0
}

func (x *RoyaltiesData) GetSplitRoyalties() map[string]*RoyaltySplitData {
	if x != nil {
		return x.SplitRoyalties
	}
	return nil
}

func (x *RoyaltiesData) GetITOPercentage() uint32 {
	if x != nil {
		return x.ITOPercentage
	}
	return 0
}

func (x *RoyaltiesData) GetITOFixed() int64 {
	if x != nil {
		return x.ITOFixed
	}
	return 0
}

// Royalty holds the royalty threshold
type RoyaltyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     int64  `protobuf:"varint,1,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	Percentage uint32 `protobuf:"varint,2,opt,name=Percentage,json=percentage,proto3" json:"Percentage,omitempty"`
}

func (x *RoyaltyData) Reset() {
	*x = RoyaltyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoyaltyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoyaltyData) ProtoMessage() {}

func (x *RoyaltyData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoyaltyData.ProtoReflect.Descriptor instead.
func (*RoyaltyData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{5}
}

func (x *RoyaltyData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RoyaltyData) GetPercentage() uint32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

// RoyaltySplitData holds the royalty split
type RoyaltySplitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PercentTransferPercentage uint32 `protobuf:"varint,1,opt,name=PercentTransferPercentage,json=percentTransferPercentage,proto3" json:"PercentTransferPercentage,omitempty"`
	PercentTransferFixed      uint32 `protobuf:"varint,2,opt,name=PercentTransferFixed,json=percentTransferFixed,proto3" json:"PercentTransferFixed,omitempty"`
	PercentMarketPercentage   uint32 `protobuf:"varint,3,opt,name=PercentMarketPercentage,json=percentMarketPercentage,proto3" json:"PercentMarketPercentage,omitempty"`
	PercentMarketFixed        uint32 `protobuf:"varint,4,opt,name=PercentMarketFixed,json=percentMarketFixed,proto3" json:"PercentMarketFixed,omitempty"`
	PercentITOPercentage      uint32 `protobuf:"varint,5,opt,name=PercentITOPercentage,json=percentITOPercentage,proto3" json:"PercentITOPercentage,omitempty"`
	PercentITOFixed           uint32 `protobuf:"varint,6,opt,name=PercentITOFixed,json=percentITOFixed,proto3" json:"PercentITOFixed,omitempty"`
}

func (x *RoyaltySplitData) Reset() {
	*x = RoyaltySplitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kda_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoyaltySplitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoyaltySplitData) ProtoMessage() {}

func (x *RoyaltySplitData) ProtoReflect() protoreflect.Message {
	mi := &file_kda_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoyaltySplitData.ProtoReflect.Descriptor instead.
func (*RoyaltySplitData) Descriptor() ([]byte, []int) {
	return file_kda_proto_rawDescGZIP(), []int{6}
}

func (x *RoyaltySplitData) GetPercentTransferPercentage() uint32 {
	if x != nil {
		return x.PercentTransferPercentage
	}
	return 0
}

func (x *RoyaltySplitData) GetPercentTransferFixed() uint32 {
	if x != nil {
		return x.PercentTransferFixed
	}
	return 0
}

func (x *RoyaltySplitData) GetPercentMarketPercentage() uint32 {
	if x != nil {
		return x.PercentMarketPercentage
	}
	return 0
}

func (x *RoyaltySplitData) GetPercentMarketFixed() uint32 {
	if x != nil {
		return x.PercentMarketFixed
	}
	return 0
}

func (x *RoyaltySplitData) GetPercentITOPercentage() uint32 {
	if x != nil {
		return x.PercentITOPercentage
	}
	return 0
}

func (x *RoyaltySplitData) GetPercentITOFixed() uint32 {
	if x != nil {
		return x.PercentITOFixed
	}
	return 0
}

var File_kda_proto protoreflect.FileDescriptor

var file_kda_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6b, 0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x96, 0x06, 0x0a, 0x07, 0x4b, 0x44, 0x41, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x44, 0x41, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x69, 0x64, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x2c, 0x0a, 0x04, 0x55, 0x52, 0x49, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b,
	0x44, 0x41, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x55, 0x52, 0x49, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x75, 0x72, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x69,
	0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e,
	0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x52, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x09, 0x72, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x55, 0x52, 0x49, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x0d, 0x45,
	0x6e, 0x75, 0x6d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f,
	0x6e, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x22, 0xe2, 0x01, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x61, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x61, 0x6e, 0x57, 0x69, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x57, 0x69, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x61, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x42, 0x75, 0x72, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x63, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x49, 0x73, 0x4e, 0x46, 0x54, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x4e, 0x46, 0x54,
	0x4d, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x49,
	0x73, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69,
	0x73, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x49, 0x73, 0x4e, 0x46, 0x54,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x69, 0x73, 0x4e,
	0x46, 0x54, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x69, 0x6e,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x48, 0x61, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49,
	0x54, 0x4f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x68, 0x61, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x49, 0x54, 0x4f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x61, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x22, 0xd1, 0x03, 0x0a, 0x0d,
	0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12,
	0x50, 0x0a, 0x0e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x54, 0x4f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x74, 0x6f, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x54, 0x4f, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x74, 0x6f, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x1a, 0x5a, 0x0a, 0x13, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x45, 0x0a, 0x0b, 0x52, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x10, 0x52, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x19, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x17, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x49, 0x54, 0x4f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x54,
	0x4f, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x54, 0x4f, 0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x49, 0x54, 0x4f,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x6b, 0x61, 0x70, 0x70,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kda_proto_rawDescOnce sync.Once
	file_kda_proto_rawDescData = file_kda_proto_rawDesc
)

func file_kda_proto_rawDescGZIP() []byte {
	file_kda_proto_rawDescOnce.Do(func() {
		file_kda_proto_rawDescData = protoimpl.X.CompressGZIP(file_kda_proto_rawDescData)
	})
	return file_kda_proto_rawDescData
}

var file_kda_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kda_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_kda_proto_goTypes = []interface{}{
	(KDAData_EnumAssetType)(0), // 0: proto.KDAData.EnumAssetType
	(*KDAData)(nil),            // 1: proto.KDAData
	(*PropertiesData)(nil),     // 2: proto.PropertiesData
	(*AttributesData)(nil),     // 3: proto.AttributesData
	(*RolesData)(nil),          // 4: proto.RolesData
	(*RoyaltiesData)(nil),      // 5: proto.RoyaltiesData
	(*RoyaltyData)(nil),        // 6: proto.RoyaltyData
	(*RoyaltySplitData)(nil),   // 7: proto.RoyaltySplitData
	nil,                        // 8: proto.KDAData.URIsEntry
	nil,                        // 9: proto.RoyaltiesData.SplitRoyaltiesEntry
}
var file_kda_proto_depIdxs = []int32{
	0, // 0: proto.KDAData.AssetType:type_name -> proto.KDAData.EnumAssetType
	8, // 1: proto.KDAData.URIs:type_name -> proto.KDAData.URIsEntry
	5, // 2: proto.KDAData.Royalties:type_name -> proto.RoyaltiesData
	2, // 3: proto.KDAData.Properties:type_name -> proto.PropertiesData
	3, // 4: proto.KDAData.Attributes:type_name -> proto.AttributesData
	4, // 5: proto.KDAData.Roles:type_name -> proto.RolesData
	6, // 6: proto.RoyaltiesData.TransferPercentage:type_name -> proto.RoyaltyData
	9, // 7: proto.RoyaltiesData.SplitRoyalties:type_name -> proto.RoyaltiesData.SplitRoyaltiesEntry
	7, // 8: proto.RoyaltiesData.SplitRoyaltiesEntry.value:type_name -> proto.RoyaltySplitData
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_kda_proto_init() }
func file_kda_proto_init() {
	if File_kda_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kda_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KDAData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertiesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoyaltiesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoyaltyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kda_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoyaltySplitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kda_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kda_proto_goTypes,
		DependencyIndexes: file_kda_proto_depIdxs,
		EnumInfos:         file_kda_proto_enumTypes,
		MessageInfos:      file_kda_proto_msgTypes,
	}.Build()
	File_kda_proto = out.File
	file_kda_proto_rawDesc = nil
	file_kda_proto_goTypes = nil
	file_kda_proto_depIdxs = nil
}
